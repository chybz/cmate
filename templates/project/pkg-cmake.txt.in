# -*- CMake -*-
% if(${P.CM.PKG_COUNT} GREATER 0)

%###
%#
%# CMake dependencies
%#
%###
if(@P.UNAME@_FETCH_DEPS)
    include(FetchContent)
%     foreach(DEP ${P.DEPS})

    FetchContent_Declare(
        %{ ${P.DEPS.${DEP}.NAME} }%
%         if("${P.DEPS.${DEP}.TYPE}" STREQUAL "git")
        GIT_REPOSITORY %{ ${P.DEPS.${DEP}.URL} }%
        GIT_TAG %{ ${P.DEPS.${DEP}.TAG} }%
%         elseif("${P.DEPS.${DEP}.TYPE}" STREQUAL "url")
        URL %{ ${P.DEPS.${DEP}.URL} }%
%         endif()
        OVERRIDE_FIND_PACKAGE
    )
%         if(NOT "${DEP.ARGS}" STREQUAL "")

%             foreach(ARG ${DEP.ARGS})
%                 if (ARG MATCHES "^-D([^=]+)=(([^=]+))$")
    set(%{ ${CMAKE_MATCH_1} }% "%{ ${CMAKE_MATCH_2} }%")
%                 endif()
%             endforeach()

%         endif()
    FetchContent_MakeAvailable(%{ ${P.DEPS.${DEP}.NAME} }%)
%     endforeach()
endif()

%     foreach(PKG ${P.CM.PKGS})
%         if(${P.CM.PKGS.${PKG}.COMP_COUNT} GREATER 0)
find_package(
    %{ ${PKG} }%
    CONFIG REQUIRED
    COMPONENTS
%         foreach(COMP ${P.CM.PKGS.${PKG}.COMPS})
        %{ ${COMP} }%
%         endforeach()
)
%         else()
find_package(%{ ${PKG} }% CONFIG REQUIRED)
%         endif()
%     endforeach()
% endif()
